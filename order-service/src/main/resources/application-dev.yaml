spring:
  config:
    import: optional:file:./.env[.properties]
  main:
    allow-bean-definition-overriding: true
  datasource:
    url: jdbc:postgresql://localhost:${ORDERS_DB_PORT}/${ORDERS_DB_NAME}
    username: ${ORDERS_DB_USERNAME}
    password: ${ORDERS_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
  flyway:
    url: jdbc:postgresql://localhost:${ORDERS_DB_PORT}/${ORDERS_DB_NAME}
    user: ${ORDERS_DB_USERNAME}
    password: ${ORDERS_DB_PASSWORD}
    enabled: true
    baseline-on-migrate: false
    locations:
      - classpath:db/migration
    
  threads:
    virtual:
      enabled: true
  cloud:
    function:
      definition: paymentConsumer
    stream:
      kafka:
        binder:
          brokers:
          - ${BOOTSTRAP_SERVER}
      bindings:
        orders-out-0:
          destination: orders
          group: orderProducers
        paymentConsumer-in-0:
          destination: payments
          group: order-service-payment-consumer
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      auto-offset-reset:  earliest
      enable-auto-commit: true
      key-deserializer:
        org.apache.kafka.common.serialization.IntegerDeserializer
      value-deserializer:
        org.apache.kafka.common.serialization.ByteArrayDeserializer
    producer:
      key-serializer:
        org.apache.kafka.common.serialization.IntegerSerializer
      value-serializer:
        org.apache.kafka.common.serialization.ByteArraySerializer
logging:
  level:
    org: 
      springframework: 
          core:
            env: DEBUG
          boot:
            context:
              config: DEBUG
server:
  port: ${ORDERS_DEV_PORT:8081}
